services:
  mongo:
    command: [ "--bind_ip_all" ]
    platform: linux/arm64
    image: mongodb/mongodb-community-server:latest
    container_name: mongo
    expose:
      - "27017"
    ports:
      - "27017:27017"  # Remove in production
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-secureRootPassword123}
      - MONGO_INITDB_DATABASE=${MONGO_NODEBB_DATABASE:-nodebb}
      - MONGO_NODEBB_USERNAME=${MONGO_NODEBB_USERNAME:-nodebb}
      - MONGO_NODEBB_PASSWORD=${MONGO_NODEBB_PASSWORD:-secureNodebbPassword456}
    volumes:
      - mongo_data:/data/db
      - ${PWD}/entrypoints/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nodebb:
    platform: linux/amd64
    image: elestio/nodebb:latest
    container_name: nodebb
    restart: always
    depends_on:
      - mongo
    expose:
      - "4567"
    volumes:
      - nodebb_data:/usr/src/app/public/uploads
      - nodebb_build:/usr/src/app/build
      - nodebb_config:/opt/config
      - ${PWD}/entrypoints/nodebb-init.js:/usr/src/app/entrypoints/nodebb-init.js:ro
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - SUBDOMAIN_NODEBB=${SUBDOMAIN_NODEBB:-forum}
      - PROTOCOL=${PROTOCOL:-http://}
      - NODEBB_PORT=${NODEBB_PORT:-4567}
      - NODEBB_SECRET=${NODEBB_SECRET:-changeMe}
      - NODEBB_BEARER=${NODEBB_BEARER:-TODO}
      - MONGO_HOST=${MONGO_HOST:-mongo}
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-undefined}
      - MONGO_NODEBB_USERNAME=${MONGO_NODEBB_USERNAME:-nodebb}
      - MONGO_NODEBB_PASSWORD=${MONGO_NODEBB_PASSWORD:-secureNodebbPassword456}
      - MONGO_NODEBB_DATABASE=${MONGO_NODEBB_DATABASE:-nodebb}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-secureAdminPassword789}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
    entrypoint: [ "/bin/bash", "-c", "node /usr/src/app/entrypoints/nodebb-init.js" ]
    networks:
      - app-network

  backend:
    platform: linux/amd64
    container_name: network_backend
    image: hglenn2k/network_backend:latest
    expose:
      - "${PORT:-3001}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3001}
      - DOMAIN=${DOMAIN:-localhost}
      - PROTOCOL=${PROTOCOL:-http://}
      - EXPRESS_SESSION_SECRET=${NODEBB_SECRET}
      - MONGO_HOST=${MONGO_HOST:-mongo}
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_ENV=${MONGO_ENV:-DEV}
      - MONGO_LOCAL=${MONGO_LOCAL:-true}
      - MONGO_NODEBB_DATABASE=${MONGO_NODEBB_DATABASE:-nodebb}
      - EXPRESS_MONGO_USER=${EXPRESS_MONGO_USER:-root}
      - EXPRESS_MONGO_PASSWORD=${MONGO_ROOT_PASSWORD}
      - GOOGLE_SERVICE_ACCOUNT_TYPE=${GOOGLE_SERVICE_ACCOUNT_TYPE}
      - GOOGLE_SERVICE_ACCOUNT_PROJECT_ID=${GOOGLE_SERVICE_ACCOUNT_PROJECT_ID}
      - GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY_ID=${GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY_ID}
      - GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY=${GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY}
      - GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL=${GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL}
      - GOOGLE_SERVICE_ACCOUNT_CLIENT_ID=${GOOGLE_SERVICE_ACCOUNT_CLIENT_ID}
      - GOOGLE_SERVICE_ACCOUNT_AUTH_URI=${GOOGLE_SERVICE_ACCOUNT_AUTH_URI}
      - GOOGLE_SERVICE_ACCOUNT_TOKEN_URI=${GOOGLE_SERVICE_ACCOUNT_TOKEN_URI}
      - GOOGLE_SERVICE_ACCOUNT_AUTH_PROVIDER_CERT_URL=${GOOGLE_SERVICE_ACCOUNT_AUTH_PROVIDER_CERT_URL}
      - GOOGLE_SERVICE_ACCOUNT_CLIENT_CERT_URL=${GOOGLE_SERVICE_ACCOUNT_CLIENT_CERT_URL}
      - GOOGLE_SPREADSHEET_ID=${GOOGLE_SPREADSHEET_ID}
      - FORUM_PROXY_ROUTE=${FORUM_PROXY_ROUTE:-/api/nodebb}
      - BREVO_API_KEY=${BREVO_API_KEY}
      - BREVO_SMTP_SERVER=${BREVO_SMTP_SERVER}
      - BREVO_SMTP_PORT=${BREVO_SMTP_PORT}
      - BREVO_SMTP_LOGIN=${BREVO_SMTP_LOGIN}
      - BREVO_SMTP_PASSWORD=${BREVO_SMTP_PASSWORD}
      - NODEBB_BEARER=${NODEBB_BEARER}
      - NODEBB_SERVICE_URL=${NODEBB_SERVICE_URL:-http://nodebb:4567}
    networks:
      - app-network
    depends_on:
      - mongo
      - nodebb
    entrypoint: [ "/bin/bash", "-c", "sleep 5 && node server.js" ]

  frontend:
    platform: linux/amd64
    container_name: network_frontend
    image: hglenn2k/network_frontend:latest
    expose:
      - "3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING:-true}
      - REACT_APP_DOMAIN=${REACT_APP_DOMAIN:-localhost}
      - REACT_APP_DOMAIN_NO_HTTPS=${REACT_APP_DOMAIN_NO_HTTPS:-localhost}
      - REACT_APP_EXPRESS_URL=/api/express #todo .env
      - REACT_APP_NODEBB_URL=/api/nodebb #todo .env
      - REACT_APP_PROTOCOL=${REACT_APP_PROTOCOL:-https://}
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - frontend
      - backend
      - nodebb
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/templates:/tmp/nginx-templates:ro
      - ./entrypoints/nginx-init.sh:/docker-entrypoint.d/16-nginx-init.sh:ro # '16' is important for script execution order
      - ${SSL_CERT_PATH:-./nginx/ssl}:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
      - nginx_run:/var/run
    networks:
      - app-network
    environment:
      - NGINX_HOST=${DOMAIN:-localhost}
      - NGINX_PORT=${NGINX_HTTP_PORT:-80}
      - NGINX_HTTPS_PORT=${NGINX_HTTPS_PORT:-443}
      - DEPLOYMENT_ENV=${DEPLOYMENT_ENV:-local}

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:
  nodebb_data:
  nodebb_build:
  nodebb_config:
  nginx_cache:
  nginx_run: